// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using d2admin.Services;

namespace d2admin.Services.Migrations
{
    [DbContext(typeof(D2AdminServiceContext))]
    [Migration("20211210221141_c2")]
    partial class c2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.ToTable("RoleClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            RoleId = "6fadf7cf-baa8-401d-84f5-ae54c584ad4d",
                            UserId = "23a1557f-604d-4728-b011-a851da4a307b"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("d2admin.Services.Model.CdnFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Files")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Images")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Pictures")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.HasKey("Id");

                    b.ToTable("CdnFile");
                });

            modelBuilder.Entity("d2admin.Services.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FirstLetter")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Intro")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("d2admin.Services.Model.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "6fadf7cf-baa8-401d-84f5-ae54c584ad4d",
                            Code = "sa",
                            ConcurrencyStamp = "dd26e84d-13be-4060-96dc-92384bca27ed",
                            DelFlag = false,
                            Name = "sa",
                            NormalizedName = "SA"
                        },
                        new
                        {
                            Id = "2a74609c-66c2-410c-b1bb-139ce71056f5",
                            Code = "admin",
                            ConcurrencyStamp = "354610ba-ab2a-4a34-a8e8-f9ab1c6866e3",
                            DelFlag = false,
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("d2admin.Services.Model.RoleResource", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<long>("ResourceId")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("RoleId");

                    b.ToTable("pm_role_resource");
                });

            modelBuilder.Entity("d2admin.Services.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Mobile")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("NickName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "23a1557f-604d-4728-b011-a851da4a307b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3ea81291-7aa5-41f0-b8e1-d35009e39821",
                            DelFlag = false,
                            Email = "fenglui@tuotuoniu.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            NickName = "superadmin",
                            PasswordHash = "AQAAAAEAACcQAAAAEK39qZGWC5IE9b6nSSOjKiwLJ3RrRO/LGet0KIHuoUeZ5bjaQcZn1o9d67H6ciLGfA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "AR5AJQGFXQSIHLMWMPM4MCYKEVDFYVPM",
                            TwoFactorEnabled = false,
                            UserName = "sa"
                        });
                });

            modelBuilder.Entity("d2admin.Services.Model.pm_resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Component")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Path")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Permission")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("pm_resource");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Component = "layoutHeaderAside",
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "system",
                            ParentId = 0L,
                            Path = "/system",
                            Sort = -10001,
                            Title = "系统管理",
                            Type = 1,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "permission",
                            ParentId = 1L,
                            Sort = 1,
                            Title = "权限管理",
                            Type = 1,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            Component = "/permission/views/resource",
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Icon = "address-book",
                            Name = "resource",
                            ParentId = 2L,
                            Path = "/permission/resource",
                            Permission = "permission:resource:view",
                            Sort = 90,
                            Title = "资源管理",
                            Type = 1,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Icon = "eye",
                            Name = "viewResource",
                            ParentId = 3L,
                            Permission = "permission:resource:view",
                            Sort = 90,
                            Title = "查看资源",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "addResource",
                            ParentId = 3L,
                            Permission = "permission:resource:add",
                            Sort = 100,
                            Title = "添加资源",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "delResource",
                            ParentId = 3L,
                            Permission = "permission:resource:del",
                            Sort = 100,
                            Title = "添加资源",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            Component = "/permission/views/role",
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "role",
                            ParentId = 2L,
                            Path = "/permission/role",
                            Permission = "permission:role:view",
                            Sort = 100,
                            Title = "角色管理",
                            Type = 1,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Icon = "eye",
                            Name = "viewRole",
                            ParentId = 7L,
                            Permission = "permission:role:view",
                            Sort = 90,
                            Title = "查看角色",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "addRole",
                            ParentId = 7L,
                            Permission = "permission:role:add",
                            Sort = 100,
                            Title = "添加角色",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "editRole",
                            ParentId = 7L,
                            Permission = "permission:role:edit",
                            Sort = 100,
                            Title = "修改角色",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "editResource",
                            ParentId = 3L,
                            Permission = "permission:resource:edit",
                            Sort = 100,
                            Title = "修改角色",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "delRole",
                            ParentId = 7L,
                            Permission = "permission:role:del",
                            Sort = 100,
                            Title = "删除角色",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "authzRole",
                            ParentId = 7L,
                            Permission = "permission:role:authz",
                            Sort = 100,
                            Title = "分配权限",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14L,
                            Component = "/usersphere/views/user",
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Icon = "user",
                            Name = "user",
                            ParentId = 1L,
                            Path = "/usersphere/user",
                            Permission = "usersphere:user:view",
                            Sort = 110,
                            Title = "用户管理",
                            Type = 1,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "addUser",
                            ParentId = 14L,
                            Permission = "usersphere:user:add",
                            Sort = 110,
                            Title = "添加用户",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "editUser",
                            ParentId = 14L,
                            Permission = "usersphere:user:edit",
                            Sort = 110,
                            Title = "编辑用户",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "delUser",
                            ParentId = 14L,
                            Permission = "usersphere:user:del",
                            Sort = 110,
                            Title = "删除用户",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18L,
                            CreateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelFlag = false,
                            Name = "authzUser",
                            ParentId = 14L,
                            Permission = "usersphere:user:authz",
                            Sort = 110,
                            Title = "分配角色",
                            Type = 2,
                            UpdateTime = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("d2admin.Services.Model.RoleResource", b =>
                {
                    b.HasOne("d2admin.Services.Model.pm_resource", "Resource")
                        .WithMany("RoleResources")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("d2admin.Services.Model.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Resource");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("d2admin.Services.Model.pm_resource", b =>
                {
                    b.Navigation("RoleResources");
                });
#pragma warning restore 612, 618
        }
    }
}
